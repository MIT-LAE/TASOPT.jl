#-----------------------------
# pyCycle LPC Map Data
#-----------------------------
# Notice: the data is sourced from pyCycle: https://github.com/OpenMDAO/pyCycle
# This file is a modified version of the original map in pyCycle. The original map 
# can be found in pycycle/maps/LPC_map.py

#-----------------------------
# Original pyCycle license
#-----------------------------
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Defaults
default_Nc = 1.0
default_Rline = 2.150

RlineMap = [1.000, 1.200, 1.400, 1.600, 1.800, 2.000, 2.200, 2.400, 2.600, 2.800, 3.000]
NcMap = [0.300, 0.400, 0.500, 0.600, 0.700, 0.750, 0.800, 0.850, 0.900, 0.950, 1.000, 1.050, 1.100, 1.150]

WcMap = [
    17.907 19.339 20.749 22.136 23.498 24.833 26.141 27.420 28.669 29.887 31.011;
    24.951 26.742 28.485 30.177 31.815 33.397 34.921 36.385 37.788 39.128 40.405;
    32.682 34.715 36.662 38.520 40.286 41.958 43.533 45.011 46.390 47.669 48.848;
    40.927 43.115 45.168 47.083 48.858 50.492 51.983 53.331 54.539 55.607 56.537;
    49.850 52.122 54.195 56.068 57.741 59.215 60.494 61.580 62.479 63.197 63.739;
    54.798 57.066 59.099 60.897 62.463 63.800 64.913 65.810 66.497 66.983 67.278;
    60.051 62.252 64.185 65.851 67.255 68.405 69.307 69.973 70.413 70.638 70.675;
    65.313 67.427 69.262 70.824 72.118 73.153 73.938 74.484 74.803 74.907 74.907;
    70.995 72.902 74.542 75.920 77.043 77.920 78.560 78.974 79.174 79.198 79.198;
    77.441 78.904 80.155 81.199 82.042 82.690 83.151 83.434 83.545 83.548 83.548;
    84.344 85.211 85.952 86.572 87.074 87.460 87.735 87.903 87.967 87.968 87.968;
    89.305 89.687 90.025 90.320 90.572 90.783 90.953 91.083 91.174 91.227 91.243;
    93.626 93.712 93.793 93.868 93.939 94.004 94.064 94.120 94.170 94.216 94.257;
    96.084 96.074 96.064 96.054 96.044 96.033 96.022 96.012 96.000 95.989 95.978
]

effMap = [
    0.8070 0.8291 0.8461 0.8566 0.8586 0.8497 0.8170 0.7410 0.6022 0.3674 0.0000;
    0.8230 0.8454 0.8628 0.8741 0.8775 0.8708 0.8419 0.7732 0.6477 0.4372 0.0916;
    0.8411 0.8631 0.8805 0.8921 0.8966 0.8918 0.8671 0.8065 0.6959 0.5124 0.2168;
    0.8565 0.8783 0.8957 0.9077 0.9131 0.9099 0.8883 0.8338 0.7340 0.5696 0.3083;
    0.8662 0.8879 0.9055 0.9179 0.9239 0.9219 0.9024 0.8520 0.7600 0.6096 0.3739;
    0.8699 0.8917 0.9093 0.9218 0.9281 0.9265 0.9080 0.8598 0.7721 0.6297 0.4089;
    0.8743 0.8957 0.9130 0.9253 0.9316 0.9304 0.9131 0.8678 0.7858 0.6538 0.4519;
    0.8836 0.9026 0.9179 0.9287 0.9342 0.9331 0.9183 0.8804 0.8128 0.7065 0.5485;
    0.8943 0.9103 0.9230 0.9319 0.9362 0.9351 0.9231 0.8930 0.8406 0.7602 0.6442;
    0.9060 0.9169 0.9253 0.9310 0.9334 0.9321 0.9236 0.9036 0.8703 0.8211 0.7529;
    0.9170 0.9224 0.9264 0.9288 0.9293 0.9280 0.9231 0.9127 0.8962 0.8730 0.8423;
    0.9159 0.9171 0.9176 0.9177 0.9171 0.9159 0.9136 0.9097 0.9042 0.8968 0.8876;
    0.9061 0.9059 0.9055 0.9052 0.9047 0.9042 0.9036 0.9028 0.9018 0.9007 0.8994;
    0.8962 0.8964 0.8965 0.8966 0.8967 0.8968 0.8969 0.8970 0.8971 0.8972 0.8973
]

PRMap = [
    1.0678 1.0649 1.0613 1.0571 1.0522 1.0468 1.0402 1.0322 1.0227 1.0117 1.0000;
    1.1239 1.1186 1.1122 1.1047 1.0962 1.0865 1.0751 1.0611 1.0445 1.0257 1.0045;
    1.1994 1.1910 1.1809 1.1691 1.1558 1.1409 1.1233 1.1020 1.0771 1.0488 1.0173;
    1.2981 1.2855 1.2706 1.2533 1.2339 1.2122 1.1869 1.1563 1.1210 1.0811 1.0370;
    1.4289 1.4111 1.3899 1.3655 1.3380 1.3076 1.2720 1.2295 1.1804 1.1254 1.0654;
    1.5118 1.4909 1.4661 1.4375 1.4052 1.3695 1.3278 1.2779 1.2205 1.1565 1.0868;
    1.6070 1.5827 1.5538 1.5205 1.4831 1.4417 1.3934 1.3358 1.2697 1.1962 1.1165;
    1.7160 1.6881 1.6555 1.6183 1.5767 1.5312 1.4785 1.4160 1.3448 1.2660 1.1808;
    1.8402 1.8086 1.7724 1.7318 1.6869 1.6381 1.5824 1.5170 1.4430 1.3615 1.2736;
    1.9930 1.9587 1.9206 1.8788 1.8336 1.7852 1.7309 1.6685 1.5988 1.5225 1.4405;
    2.1593 2.1257 2.0899 2.0518 2.0117 1.9695 1.9235 1.8724 1.8163 1.7557 1.6909;
    2.2764 2.2510 2.2248 2.1978 2.1701 2.1416 2.1118 2.0801 2.0464 2.0108 1.9735;
    2.3771 2.3664 2.3557 2.3448 2.3339 2.3229 2.3118 2.3004 2.2887 2.2768 2.2646;
    2.4343 2.4365 2.4387 2.4409 2.4430 2.4452 2.4473 2.4495 2.4516 2.4538 2.4559
]

#-----------------------------
# Compute polytropic efficiency
#-----------------------------
polyeff_Map = poly_efficiency_map_from_isentropic(effMap, PRMap)

#-----------------------------
# Create interpolation objects
#-----------------------------
#Expand maps with dummy data to cover broader range of speeds and Rlines
itp_Wc, itp_PR, itp_polyeff = create_extrapolated_maps(NcMap, RlineMap, WcMap, PRMap, polyeff_Map)

#-----------------------------
# Create map objects
#-----------------------------
default_PR = itp_PR(default_Nc, default_Rline)
default_Wc = itp_Wc(default_Nc, default_Rline)
default_polyeff = maximum(polyeff_Map)

defaults = MapDefaults(default_Nc, default_Rline, default_Wc, default_PR, default_polyeff)

const LPCMap = CompressorMap(defaults, RlineMap, NcMap, WcMap, PRMap, 
        effMap, polyeff_Map, itp_Wc, itp_PR, itp_polyeff)
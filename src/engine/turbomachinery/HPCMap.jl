#-----------------------------
# pyCycle HPC Map Data
#-----------------------------
# Defaults
default_Nc = 0.976
default_Rline = 2.050

RlineMap = [1.000, 1.200, 1.400, 1.600, 1.800, 2.000, 2.200, 2.400, 2.600, 2.800, 3.000]
NcMap = [0.500, 0.600, 0.700, 0.750, 0.800, 0.850, 0.900, 0.925, 0.950, 0.975, 1.000, 1.025, 1.050, 1.150]

WcMap = [
    7.267 7.543 7.802 8.046 8.273 8.484 8.678 8.855 9.017 9.162 9.292;
    9.809 10.081 10.331 10.558 10.764 10.948 11.111 11.253 11.374 11.475 11.557;
    13.119 13.369 13.593 13.791 13.964 14.111 14.235 14.335 14.412 14.467 14.501;
    15.487 15.754 15.990 16.196 16.372 16.519 16.638 16.729 16.794 16.834 16.850;
    18.810 19.118 19.386 19.614 19.804 19.956 20.073 20.155 20.203 20.219 20.219;
    24.726 25.163 25.538 25.851 26.105 26.302 26.444 26.532 26.570 26.572 26.572;
    32.579 33.147 33.628 34.025 34.340 34.576 34.736 34.824 34.844 34.844 34.844;
    37.318 37.919 38.426 38.843 39.173 39.418 39.582 39.669 39.685 39.685 39.685;
    42.541 43.049 43.481 43.840 44.126 44.343 44.493 44.579 44.603 44.603 44.603;
    47.740 48.152 48.505 48.801 49.040 49.225 49.358 49.440 49.472 49.473 49.473;
    53.232 53.466 53.672 53.849 53.998 54.120 54.216 54.285 54.330 54.349 54.350;
    55.614 55.749 55.870 55.976 56.068 56.146 56.211 56.261 56.299 56.323 56.335;
    57.892 57.961 58.023 58.079 58.130 58.174 58.213 58.245 58.273 58.294 58.310;
    60.960 60.963 60.966 60.969 60.972 60.975 60.977 60.980 60.983 60.985 60.987
]

effMap = [
    0.7176 0.7276 0.7328 0.7322 0.7247 0.7090 0.6806 0.6339 0.5639 0.4639 0.3239;
    0.7345 0.7429 0.7471 0.7467 0.7407 0.7282 0.7060 0.6702 0.6179 0.5450 0.4465;
    0.7558 0.7623 0.7657 0.7653 0.7609 0.7516 0.7355 0.7100 0.6734 0.6239 0.5589;
    0.7685 0.7756 0.7795 0.7800 0.7765 0.7687 0.7544 0.7315 0.6985 0.6538 0.5955;
    0.7846 0.7928 0.7979 0.7996 0.7975 0.7910 0.7783 0.7571 0.7261 0.6839 0.6287;
    0.8102 0.8218 0.8300 0.8345 0.8348 0.8303 0.8191 0.7984 0.7670 0.7233 0.6654;
    0.8343 0.8477 0.8577 0.8639 0.8659 0.8632 0.8537 0.8349 0.8055 0.7642 0.7093;
    0.8423 0.8554 0.8651 0.8713 0.8735 0.8713 0.8628 0.8456 0.8189 0.7814 0.7316;
    0.8576 0.8673 0.8745 0.8790 0.8804 0.8786 0.8722 0.8596 0.8404 0.8137 0.7789;
    0.8593 0.8659 0.8707 0.8734 0.8739 0.8721 0.8671 0.8579 0.8440 0.8253 0.8012;
    0.8633 0.8658 0.8674 0.8681 0.8677 0.8662 0.8632 0.8584 0.8516 0.8427 0.8316;
    0.8384 0.8389 0.8390 0.8385 0.8376 0.8361 0.8339 0.8309 0.8269 0.8220 0.8162;
    0.8113 0.8109 0.8103 0.8095 0.8086 0.8074 0.8059 0.8042 0.8020 0.7995 0.7967;
    0.7363 0.7361 0.7359 0.7357 0.7355 0.7353 0.7351 0.7348 0.7346 0.7344 0.7342
]

PRMap = [
    1.6474 1.6178 1.5830 1.5432 1.4988 1.4501 1.3958 1.3350 1.2684 1.1967 1.1210;
    2.0524 2.0061 1.9528 1.8928 1.8267 1.7549 1.6760 1.5887 1.4942 1.3937 1.2887;
    2.6917 2.6224 2.5441 2.4574 2.3630 2.2618 2.1517 2.0312 1.9020 1.7659 1.6247;
    3.1844 3.0989 3.0017 2.8938 2.7763 2.6501 2.5128 2.3625 2.2016 2.0325 1.8576;
    3.9146 3.8061 3.6811 3.5412 3.3876 3.2221 3.0412 2.8428 2.6301 2.4070 2.1770;
    5.2748 5.1343 4.9640 4.7661 4.5434 4.2989 4.0272 3.7250 3.3991 3.0567 2.7054;
    7.2269 7.0482 6.8214 6.5500 6.2382 5.8909 5.4999 5.0605 4.5840 4.0826 3.5692;
    8.4539 8.2523 7.9945 7.6844 7.3269 6.9275 6.4764 5.9681 5.4154 4.8326 4.2344;
    9.7989 9.5666 9.2844 8.9557 8.5845 8.1752 7.7182 7.2068 6.6512 6.0625 5.4522;
    11.0964 10.8394 10.5411 10.2040 9.8313 9.4263 8.9800 8.4856 7.9504 7.3823 6.7898;
    12.3279 12.0811 11.8131 11.5251 11.2183 10.8940 10.5466 10.1712 9.7705 9.3472 8.9045;
    12.8281 12.6098 12.3814 12.1431 11.8957 11.6395 11.3715 11.0885 10.7917 10.4821 10.1607;
    13.2984 13.1308 12.9593 12.7839 12.6048 12.4222 12.2345 12.0405 11.8404 11.6343 11.4228;
    13.9406 13.9123 13.8840 13.8556 13.8272 13.7988 13.7703 13.7417 13.7130 13.6842 13.6554
]

#-----------------------------
# Compute polytropic efficiency
#-----------------------------
polyeff_Map = poly_efficiency_map_from_isentropic(effMap, PRMap)

#-----------------------------
# Create interpolation objects
#-----------------------------
#Expand maps with dummy data to cover broader range of speeds and Rlines
itp_Wc, itp_PR, itp_polyeff = create_extrapolated_maps(NcMap, RlineMap, WcMap, PRMap, polyeff_Map)

#-----------------------------
# Create map objects
#-----------------------------
default_PR = itp_PR(default_Nc, default_Rline)
default_Wc = itp_Wc(default_Nc, default_Rline)

defaults = MapDefaults(default_Nc, default_Rline, default_Wc, default_PR)

const HPCMap = CompressorMap(defaults, RlineMap, NcMap, WcMap, PRMap, 
        effMap, polyeff_Map, itp_Wc, itp_PR, itp_polyeff)
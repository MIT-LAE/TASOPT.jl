using JLD2
export quicksave_aircraft, quickload_aircraft

"""
    quicksave_aircraft(ac::TASOPT.aircraft=TASOPT.read_aircraft_model(),
        filepath=joinpath(TASOPT.__TASOPTroot__, "IO/IO_samples/default_quicksave_aircraft.jld2"))

Serializes and saves aircraft `struct` to a .jld2 using JLD2 (not human-readable).
Intended to store aircraft models with ALL fields (since not everything is stored by save_aircraft_model).

!!! details "ðŸ”ƒ Inputs and Outputs"
    **Inputs:**
    - `ac::TASOPT.aircraft`: TASOPT aircraft `struct` containing model in any state. 
    - `filepath::String`: path and name of .jld2 file to be written.
    **Outputs:**
    - None.
"""
function quicksave_aircraft(ac::TASOPT.aircraft=TASOPT.read_aircraft_model(), 
    filepath=joinpath(TASOPT.__TASOPTroot__, "IO/IO_samples/default_quicksave_aircraft.jld2"))

    @save filepath ac
end

"""
    quickload_aircraft(datafile=joinpath(TASOPT.__TASOPTroot__, "IO/IO_samples/default_quicksave_aircraft.jld2"))

Reads a .jld2 file generated by `quicksave_aircraft()` and returns the generated `aircraft` structure.

!!! details "ðŸ”ƒ Inputs and Outputs"
    **Inputs:**
    - `filepath::String`: path and name of .jld2 file to be written.
    **Outputs:**
    - `ac::TASOPT.aircraft`: TASOPT aircraft `struct` with model in the state it was saved in.
"""
function quickload_aircraft(filepath=joinpath(TASOPT.__TASOPTroot__, "IO/IO_samples/default_quicksave_aircraft.jld2"))
    @load filepath ac
    return ac
end

